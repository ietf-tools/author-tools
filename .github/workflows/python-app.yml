# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: IETF @

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # Required OS dependencies
    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common gcc
        sudo apt-get install -y python3-cffi python3-brotli libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0 libcairo2-dev libpangocairo-1.0-0
        sudo apt-get install -y rfcdiff wdiff gawk
        sudo wget https://raw.githubusercontent.com/ietf-tools/idnits-mirror/main/idnits
        sudo cp idnits /bin
        sudo chmod +x /bin/idnits
        arch=$(arch | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
        wget "https://github.com/mmarkdown/mmark/releases/download/v2.2.43/mmark_2.2.43_linux_$arch.tgz"
        sudo tar zxf mmark_*.tgz -C /bin/
        wget https://github.com/ietf-tools/bap/archive/refs/heads/master.zip
        unzip -q master.zip -d /tmp/bap
        wget https://github.com/bartp5/libtexprintf/archive/refs/tags/v1.25.zip
        unzip -q  -q v1.25.zip -d /tmp/

    - name: Build bap
      working-directory: /tmp/bap/bap-master/
      run: |
        sudo apt-get install -y bison flex libfl-dev
        sudo ./configure
        sudo make
        sudo cp aex bap /bin

    - name: Build utftex
      working-directory: /tmp/libtexprintf-1.25
      env:
        LD_LIBRARY_PATH: /usr/local/lib
      run: |
        sudo ldconfig
        sudo apt-get install -y autoconf pkg-config libtool
        sudo ./autogen.sh
        sudo ./configure
        sudo make install

    # Python
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -c constraints.txt
        pip install -r requirements.dev.txt
    # Ruby
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
    - name: Install dependencies
      run: bundle install
    # Node
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install
    # Tests
    - name: Run Pyflakes
      run: pyflakes at tests
    - name: Run tests and collect coverage
      env:
        PATH: $PATH:/usr/local/bin:/bin:./node_modules/.bin/
        LD_LIBRARY_PATH: /usr/local/lib
      run: |
        coverage run -m unittest discover tests
        coverage xml
    - name: Upload coverage to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      uses: codecov/codecov-action@v3
