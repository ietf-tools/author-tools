# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: IETF @

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # Required OS dependencies
    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common gcc
        sudo apt-get install -y python3-cffi python3-brotli libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0 libcairo2-dev libpangocairo-1.0-0
        sudo apt-get install -y gawk
        sudo curl https://tools.ietf.org/tools/idnits/idnits-2.17.00.tgz --output idnits-2.17.00.tgz
        sudo tar xv --strip-components=1 -C /bin -f idnits-2.17.00.tgz
    # Python
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # fix xml2rfc Jinja2 resetriction issue
        grep -v xml2rfc requirements.txt > requirements2.txt
        pip install -r requirements2.txt
        pip uninstall -y jinja2
        pip install xml2rfc==3.9.1
        pip install -r requirements.dev.txt
    # Ruby
    - name: Set up Ruby
      uses: ruby/setup-ruby@477b21f02be01bcb8030d50f37cfec92bfa615b6
      with:
        ruby-version: 2.7
    - name: Install dependencies
      run: bundle install
    # Go lang
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17.1'
    - name: Install dependencies
      run: |
        go get github.com/mmarkdown/mmark
        go get github.com/blampe/goat
    # Node
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install
    # Tests
    - name: Run Pyflakes
      run: pyflakes at tests
    - name: Run tests and collect coverage
      env:
        PATH: $PATH:/bin:./node_modules/.bin/
      run: |
        coverage run -m unittest discover tests
        coverage xml
    - name: Upload coverage to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      uses: codecov/codecov-action@v2
